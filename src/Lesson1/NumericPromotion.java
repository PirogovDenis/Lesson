package Lesson1;

/**
     * 1. Если два значения имеют разные типы данных, Java автоматически преобразует одно из значений в
     * более крупное из двух типов данных.
     * <p>
     * 2. Если одно из значений является целым числом, а другое - числом с плавающей запятой, Java
     * автоматически преобразует целочисленное значение в тип данных числа с плавающей запятой.
     * <p>
     * 3. Более маленькие типы данных, такие как byte, short и char, сначала преобразуются в int
     * каждый раз, когда они используются с арифметическим оператором в Java с переменной
     * (в отличие от литерального значения, напр. (20 * 20 - можно присовить к переменой типа short)),
     * даже если ни один из операндов не является int.
     * <p>
     * 4. После всех преобразований и если операнды имеют одинаковый тип данных, р
     * езультат будет иметь тот же тип данных, что и преобразованные операнды.
     */
    public class NumericPromotion {
        // замените var типом значения которое ожидается
        public static void main(String[] args) {
            // 1 правило - What is the data type of x1 * y1
            int x1 = 1;
            long y1 = 33;
            int z1 = (int) (x1 * y1); //преобразовываем в int принудительно так как значение 33 не очень большое, по факту Java хочет long
            System.out.println(z1);

            // 2 правило - What is the data type of x2 + y2
            double x2 = 39.21;
            float y2 = 2.1F; // Указываем что float это float
            float z2 = (float) (x2 + y2);  // приводим к float так как для числа double оно маленькое, экономим память
            System.out.println(z2);

            // 3 правило - What is the data type of x3 * y3
            short x3 = 10;
            short y3 = 3;
            int z3 = x3 * y3; // оставляем int для примера, не приводим в short, хотя число 30 маленькое и спокойно влезет в диапозон
            System.out.println(z3);

            // все правила - What is the data type of w4 * x4 / y4
            short w4 = 14;
            float x4 = 13;
            double y4 = 30;
            double z4 = w4 * x4 / y4; // в идеале привести к float для экономии памяти
            System.out.println(z4);
        }
    }


